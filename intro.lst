

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Wed Nov 17 08:43:46 2021

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4580
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	0
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109+ 000000                     main@pass	equ	??_main+0
   110                           	global	main@pass
   111  000000                     main@t	equ	??_main+5
   112                           	global	main@t
   113  000000                     data@i	equ	??_data+0
   114+                          	global	data@i
   115+ 000000                     data@a	equ	?_data+0
   116                           	global	data@a
   117  000000                     cmd@i	equ	??_cmd+0
   118                           	global	cmd@i
   119  000000                     cmd@a	equ	?_cmd+0
   120+                          	global	cmd@a
   121+                          ;Data sizes: Strings 0, constant 0, data 5, bss 
      +                          0, persistent 0 stack 11
   122+                          	global	_main
   123+                          	global	??_main
   124+                          	global	?_main
   125+                                  psect   text0,class=CODE,space=0,reloc=2
   126+                          
   127+                          	opt lm
   128+                          	file	"F:\online\ahmed\pic controller\keypad_upd
      +                          ate1.c"
   129+                          	line	4
   130+ 000000                     	__size_of_main	equ	__end_of_main-_main
   131                           ;keypad_update1.c: 3: void main()
   132                           ;keypad_update1.c: 4: {
   133                           	
   134  007E74                     _main:		; BSR set to: ?
   135                           
   136                           	opt stack 31
   137                           	line	6
   138  007E74  EE00 F000          	lfsr	0,(0)
   139+ 007E78  EE11  F000         	lfsr	1,(main@pass)
   140  007E7C  0E05               	movlw	5
   141  007E7E                     u151:
   142+ 007E7E  CFEE FFE6          	movff	postinc0,postinc1
   143  007E82  2EE8               	decfsz	wreg
   144  007E84  D7FC               	goto	u151
   145+                          	line	7
   146+                          ;keypad_update1.c: 7: ADCON1=0x0f;
   147+ 007E86  0101               	movlb	1	; () banked
   148  007E88  6F06               	movwf	(??_main+6+0)&0ffh
   149  007E8A  0E0F               	movlw	low(0Fh)
   150+ 007E8C  6EC1               	movwf	((c:4033)),c
   151  007E8E  0101               	movlb	1	; () banked
   152  007E90  5106               	movf	(??_main+6+0)&0ffh,w
   153+                          	line	8
   154+                          ;keypad_update1.c: 8: TRISB=0x0f;
   155+ 007E92  0E0F               	movlw	low(0Fh)
   156  007E94  6E93               	movwf	((c:3987)),c	;volatile
   157                           	line	9
   158                           ;keypad_update1.c: 9: TRISC=0x00;
   159  007E96  0E00               	movlw	low(0)
   160+ 007E98  6E94               	movwf	((c:3988)),c	;volatile
   161                           	line	10
   162                           ;keypad_update1.c: 10: TRISD=0x00;
   163  007E9A  0E00               	movlw	low(0)
   164  007E9C  6E95               	movwf	((c:3989)),c	;volatile
   165+                          	line	11
   166+                          ;keypad_update1.c: 11: LATC=0x00;
   167+ 007E9E  0E00               	movlw	low(0)
   168  007EA0  6E8B               	movwf	((c:3979)),c	;volatile
   169                           	line	12
   170                           ;keypad_update1.c: 12: lcd_init();
   171  007EA2  ECC7  F03E         	call	_lcd_init	;wreg free
   172+                          	line	13
   173+                          ;keypad_update1.c: 13: while(1)
   174+                          	
   175+ 007EA6                     l1378:		; BSR set to: ?
   176                           
   177                           	line	16
   178                           ;keypad_update1.c: 14: {
   179                           ;keypad_update1.c: 15: char t;
   180                           ;keypad_update1.c: 16: t=keypad();
   181  007EA6  EC67  F03F         	call	_keypad	;wreg free
   182  007EAA  0101               	movlb	1	; () banked
   183+ 007EAC  0101               	movlb	1	; () banked
   184  007EAE  6F05               	movwf	((main@t))&0ffh
   185                           	line	17
   186                           ;keypad_update1.c: 17: data(t);
   187  007EB0  C105  F107         	movff	(main@t),(?_data)
   188+ 007EB4  ECE6  F03E         	call	_data	;wreg free
   189                           	line	18
   190                           ;keypad_update1.c: 18: while((PORTB&0x0f)!=0x0f)
                                 ;
   191  007EB8  D000               	goto	l1380
   192                           	
   193  007EBA                     l1380:		; BSR set to: ?
   194+                          
   195+ 007EBA  5081               	movf	((c:3969)),c,w	;volatile
   196  007EBC  0B0F               	andlw	low(0Fh)
   197  007EBE  0A0F               	xorlw	0Fh
   198+ 007EC0  A4D8               	btfss	status,2
   199  007EC2  D001               	goto	u161
   200  007EC4  D001               	goto	u160
   201+ 007EC6                     u161:
   202  007EC6  D7F9               	goto	l1380
   203  007EC8                     u160:
   204+                          	
   205+ 007EC8                     l1382:		; BSR set to: ?
   206                           
   207                           	line	19
   208                           	
   209  007EC8                     l1377:		; BSR set to: ?
   210                           
   211                           	line	13
   212  007EC8  D7EE               	goto	l1378
   213+                          	global	start
   214+ 007ECA  EF00  F000         	goto	start
   215                           	opt stack 0
   216                           GLOBAL __end_of_main
   217  007ECE                     	__end_of_main:
   218                           	FNSIZE	_main,7,0
   219                           ; =============== function _main ends ==========
                                 ==
   220                           
   221                                   psect   text1,class=CODE,space=0,reloc=2
   222                           	line	20
   223                           
   224                           	opt lm
   225                           	signat	_main,88
   226                           	global	_keypad
   227                           	global	??_keypad
   228                           	global	?_keypad
   229                           	file	"F:\online\ahmed\pic controller\keypad_lib
                                 .c"
   230                           	line	5
   231  000000                     	__size_of_keypad	equ	__end_of_keypad-_keypad
   232+                          ;keypad_lib.c: 4: char keypad(void)
   233+                          ;keypad_lib.c: 5: {
   234+                          	
   235+ 007ECE                     _keypad:		; BSR set to: ?
   236                           
   237                           	opt stack 30
   238                           	line	6
   239                           	
   240  007ECE                     l2058:		; BSR set to: ?
   241                           
   242                           	line	8
   243                           ;keypad_lib.c: 7: {
   244                           ;keypad_lib.c: 8: LATB=0xe0;
   245  007ECE  0EE0               	movlw	low(0E0h)
   246+ 007ED0  6E8A               	movwf	((c:3978)),c	;volatile
   247                           	line	9
   248                           ;keypad_lib.c: 9: switch(PORTB&0x0f)
   249  007ED2  D008               	goto	l2061
   250                           	line	11
   251                           ;keypad_lib.c: 10: {
   252                           ;keypad_lib.c: 11: case 0x0e: return('a');
   253                           	
   254  007ED4                     l2062:		; BSR set to: ?
   255+                          
   256+ 007ED4  0E61               	movlw	(061h)&0ffh
   257  007ED6  D090               	goto	l2056
   258                           	line	12
   259                           ;keypad_lib.c: 12: case 0x0b: return('b');
   260                           	
   261  007ED8                     l2063:		; BSR set to: ?
   262+                          
   263+ 007ED8  0E62               	movlw	(062h)&0ffh
   264  007EDA  D08E               	goto	l2056
   265                           	line	13
   266                           ;keypad_lib.c: 13: case 0x0D: return('c');
   267                           	
   268  007EDC                     l2064:		; BSR set to: ?
   269+                          
   270+ 007EDC  0E63               	movlw	(063h)&0ffh
   271  007EDE  D08C               	goto	l2056
   272                           	line	14
   273                           ;keypad_lib.c: 14: case 0x07: return('d');
   274                           	
   275  007EE0                     l2065:		; BSR set to: ?
   276+                          
   277+ 007EE0  0E64               	movlw	(064h)&0ffh
   278  007EE2  D08A               	goto	l2056
   279                           	line	9
   280                           	
   281  007EE4                     l2061:		; BSR set to: ?
   282+                          
   283+ 007EE4  CF81 F107          	movff	(c:3969),??_keypad+0+0	;volatile
   284  007EE8  0E0F               	movlw	0Fh
   285  007EEA  0101               	movlb	1	; () banked
   286+ 007EEC  1707               	andwf	(??_keypad+0+0)&0ffh
   287  007EEE  C107  F108         	movff	??_keypad+0+0,??_keypad+1+0
   288  007EF2  0101               	movlb	1	; () banked
   289+ 007EF4  6B09               	clrf	(??_keypad+1+0+1)&0ffh
   290  007EF6  D00B               	goto	l30033
   291  007EF8                     l30034:
   292+ 007EF8  0101               	movlb	1	; () banked
   293  007EFA  5108               	movf	(??_keypad+1+0)&0ffh,w
   294  007EFC  0A07               	xorlw	7 ^ 0
   295+ 007EFE  E0F0               	bz	l2065
   296  007F00  0A0C               	xorlw	11 ^ 7
   297  007F02  E0EA               	bz	l2063
   298+ 007F04  0A06               	xorlw	13 ^ 11
   299  007F06  E0EA               	bz	l2064
   300  007F08  0A03               	xorlw	14 ^ 13
   301+ 007F0A  E0E4               	bz	l2062
   302  007F0C  D005               	goto	l2060
   303                           
   304  007F0E                     l30033:
   305+ 007F0E  0101               	movlb	1	; () banked
   306  007F10  5109               	movf	(??_keypad+1+1)&0ffh,w
   307  007F12  0A00               	xorlw	0 ^ 0
   308+ 007F14  E0F1               	bz	l30034
   309  007F16  D000               	goto	l2060
   310                           
   311                           	line	15
   312                           	
   313  007F18                     l2060:		; BSR set to: ?
   314+                          
   315+                          	line	16
   316+                          ;keypad_lib.c: 16: LATB=0xD0;
   317+ 007F18  0ED0               	movlw	low(0D0h)
   318  007F1A  6E8A               	movwf	((c:3978)),c	;volatile
   319                           	line	17
   320                           ;keypad_lib.c: 17: switch(PORTB&0x0f)
   321  007F1C  D008               	goto	l2067
   322+                          	line	19
   323+                          ;keypad_lib.c: 18: {
   324+                          ;keypad_lib.c: 19: case 0x0e: return('e');
   325+                          	
   326+ 007F1E                     l2068:		; BSR set to: ?
   327                           
   328  007F1E  0E65               	movlw	(065h)&0ffh
   329  007F20  D06B               	goto	l2056
   330+                          	line	20
   331+                          ;keypad_lib.c: 20: case 0x0b: return('f');
   332+                          	
   333+ 007F22                     l2069:		; BSR set to: ?
   334                           
   335  007F22  0E66               	movlw	(066h)&0ffh
   336  007F24  D069               	goto	l2056
   337+                          	line	21
   338+                          ;keypad_lib.c: 21: case 0x0D: return('g');
   339+                          	
   340+ 007F26                     l2070:		; BSR set to: ?
   341                           
   342  007F26  0E67               	movlw	(067h)&0ffh
   343  007F28  D067               	goto	l2056
   344+                          	line	22
   345+                          ;keypad_lib.c: 22: case 0x07: return('h');
   346+                          	
   347+ 007F2A                     l2071:		; BSR set to: ?
   348                           
   349  007F2A  0E68               	movlw	(068h)&0ffh
   350  007F2C  D065               	goto	l2056
   351+                          	line	17
   352+                          	
   353+ 007F2E                     l2067:		; BSR set to: ?
   354                           
   355  007F2E  CF81 F107          	movff	(c:3969),??_keypad+0+0	;volatile
   356  007F32  0E0F               	movlw	0Fh
   357+ 007F34  0101               	movlb	1	; () banked
   358  007F36  1707               	andwf	(??_keypad+0+0)&0ffh
   359  007F38  C107  F108         	movff	??_keypad+0+0,??_keypad+1+0
   360+ 007F3C  0101               	movlb	1	; () banked
   361  007F3E  6B09               	clrf	(??_keypad+1+0+1)&0ffh
   362  007F40  D00B               	goto	l30035
   363+ 007F42                     l30036:
   364  007F42  0101               	movlb	1	; () banked
   365  007F44  5108               	movf	(??_keypad+1+0)&0ffh,w
   366+ 007F46  0A07               	xorlw	7 ^ 0
   367  007F48  E0F0               	bz	l2071
   368  007F4A  0A0C               	xorlw	11 ^ 7
   369+ 007F4C  E0EA               	bz	l2069
   370  007F4E  0A06               	xorlw	13 ^ 11
   371  007F50  E0EA               	bz	l2070
   372+ 007F52  0A03               	xorlw	14 ^ 13
   373  007F54  E0E4               	bz	l2068
   374  007F56  D005               	goto	l2066
   375+                          
   376+ 007F58                     l30035:
   377  007F58  0101               	movlb	1	; () banked
   378  007F5A  5109               	movf	(??_keypad+1+1)&0ffh,w
   379+ 007F5C  0A00               	xorlw	0 ^ 0
   380  007F5E  E0F1               	bz	l30036
   381  007F60  D000               	goto	l2066
   382+                          
   383+                          	line	23
   384+                          	
   385+ 007F62                     l2066:		; BSR set to: ?
   386                           
   387                           	line	24
   388                           ;keypad_lib.c: 24: LATB=0xB0;
   389  007F62  0EB0               	movlw	low(0B0h)
   390  007F64  6E8A               	movwf	((c:3978)),c	;volatile
   391+                          	line	25
   392+                          ;keypad_lib.c: 25: switch(PORTB&0x0f)
   393+ 007F66  D008               	goto	l2073
   394                           	line	27
   395                           ;keypad_lib.c: 26: {
   396                           ;keypad_lib.c: 27: case 0x0e: return('i');
   397                           	
   398  007F68                     l2074:		; BSR set to: ?
   399                           
   400  007F68  0E69               	movlw	(069h)&0ffh
   401+ 007F6A  D046               	goto	l2056
   402                           	line	28
   403                           ;keypad_lib.c: 28: case 0x0b: return('j');
   404                           	
   405  007F6C                     l2075:		; BSR set to: ?
   406                           
   407  007F6C  0E6A               	movlw	(06Ah)&0ffh
   408+ 007F6E  D044               	goto	l2056
   409                           	line	29
   410                           ;keypad_lib.c: 29: case 0x0D: return('k');
   411                           	
   412  007F70                     l2076:		; BSR set to: ?
   413                           
   414  007F70  0E6B               	movlw	(06Bh)&0ffh
   415+ 007F72  D042               	goto	l2056
   416                           	line	30
   417                           ;keypad_lib.c: 30: case 0x07: return('l');
   418                           	
   419  007F74                     l2077:		; BSR set to: ?
   420                           
   421  007F74  0E6C               	movlw	(06Ch)&0ffh
   422+ 007F76  D040               	goto	l2056
   423                           	line	25
   424                           	
   425  007F78                     l2073:		; BSR set to: ?
   426                           
   427  007F78  CF81 F107          	movff	(c:3969),??_keypad+0+0	;volatile
   428+ 007F7C  0E0F               	movlw	0Fh
   429  007F7E  0101               	movlb	1	; () banked
   430  007F80  1707               	andwf	(??_keypad+0+0)&0ffh
   431+ 007F82  C107  F108         	movff	??_keypad+0+0,??_keypad+1+0
   432  007F86  0101               	movlb	1	; () banked
   433  007F88  6B09               	clrf	(??_keypad+1+0+1)&0ffh
   434+ 007F8A  D00B               	goto	l30037
   435  007F8C                     l30038:
   436  007F8C  0101               	movlb	1	; () banked
   437+ 007F8E  5108               	movf	(??_keypad+1+0)&0ffh,w
   438  007F90  0A07               	xorlw	7 ^ 0
   439  007F92  E0F0               	bz	l2077
   440+ 007F94  0A0C               	xorlw	11 ^ 7
   441  007F96  E0EA               	bz	l2075
   442  007F98  0A06               	xorlw	13 ^ 11
   443+ 007F9A  E0EA               	bz	l2076
   444  007F9C  0A03               	xorlw	14 ^ 13
   445  007F9E  E0E4               	bz	l2074
   446+ 007FA0  D005               	goto	l2072
   447                           
   448  007FA2                     l30037:
   449  007FA2  0101               	movlb	1	; () banked
   450+ 007FA4  5109               	movf	(??_keypad+1+1)&0ffh,w
   451  007FA6  0A00               	xorlw	0 ^ 0
   452  007FA8  E0F1               	bz	l30038
   453+ 007FAA  D000               	goto	l2072
   454                           
   455                           	line	31
   456                           	
   457  007FAC                     l2072:		; BSR set to: ?
   458                           
   459                           	line	32
   460                           ;keypad_lib.c: 32: LATB=0x70;
   461  007FAC  0E70               	movlw	low(070h)
   462+ 007FAE  6E8A               	movwf	((c:3978)),c	;volatile
   463                           	line	33
   464                           ;keypad_lib.c: 33: switch(PORTB&0x0f)
   465  007FB0  D008               	goto	l2079
   466                           	line	35
   467                           ;keypad_lib.c: 34: {
   468                           ;keypad_lib.c: 35: case 0x0e: return('m');
   469                           	
   470  007FB2                     l2080:		; BSR set to: ?
   471+                          
   472+ 007FB2  0E6D               	movlw	(06Dh)&0ffh
   473  007FB4  D021               	goto	l2056
   474                           	line	36
   475                           ;keypad_lib.c: 36: case 0x0b: return('n');
   476                           	
   477  007FB6                     l2081:		; BSR set to: ?
   478+                          
   479+ 007FB6  0E6E               	movlw	(06Eh)&0ffh
   480  007FB8  D01F               	goto	l2056
   481                           	line	37
   482                           ;keypad_lib.c: 37: case 0x0D: return('o');
   483                           	
   484  007FBA                     l2082:		; BSR set to: ?
   485+                          
   486+ 007FBA  0E6F               	movlw	(06Fh)&0ffh
   487  007FBC  D01D               	goto	l2056
   488                           	line	38
   489                           ;keypad_lib.c: 38: case 0x07: return('p');
   490                           	
   491  007FBE                     l2083:		; BSR set to: ?
   492+                          
   493+ 007FBE  0E70               	movlw	(070h)&0ffh
   494  007FC0  D01B               	goto	l2056
   495                           	line	33
   496                           	
   497  007FC2                     l2079:		; BSR set to: ?
   498                           
   499  007FC2  CF81 F107          	movff	(c:3969),??_keypad+0+0	;volatile
   500  007FC6  0E0F               	movlw	0Fh
   501  007FC8  0101               	movlb	1	; () banked
   502  007FCA  1707               	andwf	(??_keypad+0+0)&0ffh
   503  007FCC  C107  F108         	movff	??_keypad+0+0,??_keypad+1+0
   504  007FD0  0101               	movlb	1	; () banked
   505  007FD2  6B09               	clrf	(??_keypad+1+0+1)&0ffh
   506  007FD4  D00B               	goto	l30039
   507  007FD6                     l30040:
   508  007FD6  0101               	movlb	1	; () banked
   509  007FD8  5108               	movf	(??_keypad+1+0)&0ffh,w
   510  007FDA  0A07               	xorlw	7 ^ 0
   511  007FDC  E0F0               	bz	l2083
   512  007FDE  0A0C               	xorlw	11 ^ 7
   513  007FE0  E0EA               	bz	l2081
   514  007FE2  0A06               	xorlw	13 ^ 11
   515  007FE4  E0EA               	bz	l2082
   516  007FE6  0A03               	xorlw	14 ^ 13
   517  007FE8  E0E4               	bz	l2080
   518  007FEA  D005               	goto	l2057
   519                           
   520  007FEC                     l30039:
   521  007FEC  0101               	movlb	1	; () banked
   522  007FEE  5109               	movf	(??_keypad+1+1)&0ffh,w
   523  007FF0  0A00               	xorlw	0 ^ 0
   524  007FF2  E0F1               	bz	l30040
   525  007FF4  D000               	goto	l2057
   526                           
   527                           	line	40
   528                           	
   529  007FF6                     l2057:		; BSR set to: ?
   530                           
   531                           	line	6
   532  007FF6  D76B               	goto	l2058
   533                           	line	41
   534                           ;keypad_lib.c: 40: }
   535                           ;keypad_lib.c: 41: }
   536  007FF8                     l2056:
   537                           			; BSR set to: ?
   538                           
   539  007FF8  0012               	return
   540                           	opt stack 0
   541                           GLOBAL __end_of_keypad
   542  007FFA                     	__end_of_keypad:
   543                           	FNSIZE	_keypad,3,0
   544                           ; =============== function _keypad ends ========
                                 ====
   545                           
   546                           	signat	_keypad,89
   547                           	global	_data
   548                           	global	??_data
   549                           	global	?_data
   550                                   psect   text2,class=CODE,space=0,reloc=2
   551                           
   552                           	opt lm
   553                           	file	"F:\online\ahmed\pic controller\lcd_lib.c"
   554                           	line	3
   555  000000                     	__size_of_data	equ	__end_of_data-_data
   556                           ;lcd_lib.c: 2: void data(char a)
   557                           ;lcd_lib.c: 3: {
   558                           	
   559  007DCC                     _data:		; BSR set to: ?
   560                           
   561                           	opt stack 30
   562                           	line	5
   563  007DCC  8083               	bsf	c:(31768/8),(31768)&7	;volatile
   564                           	line	6
   565                           ;lcd_lib.c: 6: LATC=a;
   566  007DCE  C107  FF8B         	movff	(data@a),(c:3979)	;volatile
   567                           	line	7
   568                           ;lcd_lib.c: 7: RD1=1;
   569  007DD2  8283               	bsf	c:(31769/8),(31769)&7	;volatile
   570                           	line	8
   571                           ;lcd_lib.c: 8: for(i=0;i<=1000;i++);
   572  007DD4  0E00               	movlw	low(0)
   573  007DD6  0101               	movlb	1	; () banked
   574  007DD8  0101               	movlb	1	; () banked
   575  007DDA  6F08               	movwf	((data@i))&0ffh
   576  007DDC  0E00               	movlw	high(0)
   577  007DDE  0101               	movlb	1	; () banked
   578  007DE0  6F09               	movwf	((data@i+1))&0ffh
   579  007DE2  0101               	movlb	1	; () banked
   580  007DE4  0101               	movlb	1	; () banked
   581  007DE6  5109               	movf	((data@i+1))&0ffh,w
   582  007DE8  0A80               	xorlw	80h
   583  007DEA  0F7D               	addlw	-((03h)^80h)
   584  007DEC  0EE9               	movlw	0E9h
   585  007DEE  B4D8               	btfsc	status,2
   586  007DF0  5D08               	subwf	((data@i))&0ffh,w
   587  007DF2  A0D8               	btfss	status,0
   588  007DF4  D001               	goto	u71
   589  007DF6  D001               	goto	u70
   590  007DF8                     u71:
   591  007DF8  D001               	goto	l675
   592  007DFA                     u70:
   593  007DFA  D010               	goto	l676
   594                           	
   595  007DFC                     l675:		; BSR set to: ?
   596                           
   597  007DFC  0101               	movlb	1	; () banked
   598  007DFE  0101               	movlb	1	; () banked
   599  007E00  4B08               	infsnz	((data@i))&0ffh
   600  007E02  2B09               	incf	((data@i+1))&0ffh
   601  007E04  0101               	movlb	1	; () banked
   602  007E06  0101               	movlb	1	; () banked
   603  007E08  5109               	movf	((data@i+1))&0ffh,w
   604  007E0A  0A80               	xorlw	80h
   605  007E0C  0F7D               	addlw	-((03h)^80h)
   606  007E0E  0EE9               	movlw	0E9h
   607  007E10  B4D8               	btfsc	status,2
   608  007E12  5D08               	subwf	((data@i))&0ffh,w
   609  007E14  A0D8               	btfss	status,0
   610  007E16  D001               	goto	u81
   611  007E18  D001               	goto	u80
   612  007E1A                     u81:
   613  007E1A  D7F0               	goto	l675
   614  007E1C                     u80:
   615                           	
   616  007E1C                     l676:		; BSR set to: ?
   617                           
   618                           	line	9
   619                           ;lcd_lib.c: 9: RD1=0;
   620  007E1C  9283               	bcf	c:(31769/8),(31769)&7	;volatile
   621                           	line	11
   622                           ;lcd_lib.c: 11: }
   623  007E1E                     l674:
   624                           			; BSR set to: ?
   625                           
   626  007E1E  0012               	return
   627                           	opt stack 0
   628                           GLOBAL __end_of_data
   629  007E20                     	__end_of_data:
   630                           	FNSIZE	_data,2,1
   631                           ; =============== function _data ends ==========
                                 ==
   632                           
   633                           	signat	_data,4216
   634                           	global	_lcd_init
   635                           	global	??_lcd_init
   636                           	global	?_lcd_init
   637                                   psect   text3,class=CODE,space=0,reloc=2
   638                           
   639                           	opt lm
   640                           	file	"F:\online\ahmed\pic controller\lcd_lib.c"
   641                           	line	13
   642  000000                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_i
                                 nit
   643                           ;lcd_lib.c: 12: void lcd_init()
   644                           ;lcd_lib.c: 13: {
   645                           	
   646  007D8E                     _lcd_init:		; BSR set to: ?
   647                           
   648                           	opt stack 30
   649                           	line	14
   650                           ;lcd_lib.c: 14: cmd(0x38);
   651  007D8E  0101               	movlb	1	; () banked
   652  007D90  6F07               	movwf	(??_lcd_init+0+0)&0ffh
   653  007D92  0E38               	movlw	low(038h)
   654  007D94  0101               	movlb	1	; () banked
   655  007D96  0101               	movlb	1	; () banked
   656  007D98  6F08               	movwf	((?_cmd))&0ffh
   657  007D9A  0101               	movlb	1	; () banked
   658  007D9C  5107               	movf	(??_lcd_init+0+0)&0ffh,w
   659  007D9E  EC10  F03F         	call	_cmd	;wreg free
   660                           	line	15
   661                           ;lcd_lib.c: 15: cmd(0x01);
   662  007DA2  0101               	movlb	1	; () banked
   663  007DA4  6F07               	movwf	(??_lcd_init+0+0)&0ffh
   664  007DA6  0E01               	movlw	low(01h)
   665  007DA8  0101               	movlb	1	; () banked
   666  007DAA  0101               	movlb	1	; () banked
   667  007DAC  6F08               	movwf	((?_cmd))&0ffh
   668  007DAE  0101               	movlb	1	; () banked
   669  007DB0  5107               	movf	(??_lcd_init+0+0)&0ffh,w
   670  007DB2  EC10  F03F         	call	_cmd	;wreg free
   671                           	line	16
   672                           ;lcd_lib.c: 16: cmd(0x0f);
   673  007DB6  0101               	movlb	1	; () banked
   674  007DB8  6F07               	movwf	(??_lcd_init+0+0)&0ffh
   675  007DBA  0E0F               	movlw	low(0Fh)
   676  007DBC  0101               	movlb	1	; () banked
   677  007DBE  0101               	movlb	1	; () banked
   678  007DC0  6F08               	movwf	((?_cmd))&0ffh
   679  007DC2  0101               	movlb	1	; () banked
   680  007DC4  5107               	movf	(??_lcd_init+0+0)&0ffh,w
   681  007DC6  EC10  F03F         	call	_cmd	;wreg free
   682                           	line	17
   683                           ;lcd_lib.c: 17: }
   684  007DCA                     l678:
   685                           			; BSR set to: ?
   686                           
   687  007DCA  0012               	return
   688                           	opt stack 0
   689                           GLOBAL __end_of_lcd_init
   690  007DCC                     	__end_of_lcd_init:
   691                           	FNSIZE	_lcd_init,1,0
   692                           ; =============== function _lcd_init ends ======
                                 ======
   693                           
   694                           	signat	_lcd_init,88
   695                           	global	_cmd
   696                           	global	??_cmd
   697                           	global	?_cmd
   698                                   psect   text4,class=CODE,space=0,reloc=2
   699                           
   700                           	opt lm
   701                           	file	"F:\online\ahmed\pic controller\lcd_lib.c"
   702                           	line	20
   703  000000                     	__size_of_cmd	equ	__end_of_cmd-_cmd
   704                           ;lcd_lib.c: 19: void cmd(char a)
   705                           ;lcd_lib.c: 20: {
   706                           	
   707  007E20                     _cmd:		; BSR set to: ?
   708                           
   709                           	opt stack 29
   710                           	line	22
   711  007E20  9083               	bcf	c:(31768/8),(31768)&7	;volatile
   712                           	line	23
   713                           ;lcd_lib.c: 23: LATC=a;
   714  007E22  C108  FF8B         	movff	(cmd@a),(c:3979)	;volatile
   715                           	line	24
   716                           ;lcd_lib.c: 24: RD1=1;
   717  007E26  8283               	bsf	c:(31769/8),(31769)&7	;volatile
   718                           	line	25
   719                           ;lcd_lib.c: 25: for(i=0;i<=1000;i++);
   720  007E28  0E00               	movlw	low(0)
   721  007E2A  0101               	movlb	1	; () banked
   722  007E2C  0101               	movlb	1	; () banked
   723  007E2E  6F09               	movwf	((cmd@i))&0ffh
   724  007E30  0E00               	movlw	high(0)
   725  007E32  0101               	movlb	1	; () banked
   726  007E34  6F0A               	movwf	((cmd@i+1))&0ffh
   727  007E36  0101               	movlb	1	; () banked
   728  007E38  0101               	movlb	1	; () banked
   729  007E3A  510A               	movf	((cmd@i+1))&0ffh,w
   730  007E3C  0A80               	xorlw	80h
   731  007E3E  0F7D               	addlw	-((03h)^80h)
   732  007E40  0EE9               	movlw	0E9h
   733  007E42  B4D8               	btfsc	status,2
   734  007E44  5D09               	subwf	((cmd@i))&0ffh,w
   735  007E46  A0D8               	btfss	status,0
   736  007E48  D001               	goto	u91
   737  007E4A  D001               	goto	u90
   738  007E4C                     u91:
   739  007E4C  D001               	goto	l680
   740  007E4E                     u90:
   741  007E4E  D010               	goto	l681
   742                           	
   743  007E50                     l680:		; BSR set to: ?
   744                           
   745  007E50  0101               	movlb	1	; () banked
   746  007E52  0101               	movlb	1	; () banked
   747  007E54  4B09               	infsnz	((cmd@i))&0ffh
   748  007E56  2B0A               	incf	((cmd@i+1))&0ffh
   749  007E58  0101               	movlb	1	; () banked
   750  007E5A  0101               	movlb	1	; () banked
   751  007E5C  510A               	movf	((cmd@i+1))&0ffh,w
   752  007E5E  0A80               	xorlw	80h
   753  007E60  0F7D               	addlw	-((03h)^80h)
   754  007E62  0EE9               	movlw	0E9h
   755  007E64  B4D8               	btfsc	status,2
   756  007E66  5D09               	subwf	((cmd@i))&0ffh,w
   757  007E68  A0D8               	btfss	status,0
   758  007E6A  D001               	goto	u101
   759  007E6C  D001               	goto	u100
   760  007E6E                     u101:
   761  007E6E  D7F0               	goto	l680
   762  007E70                     u100:
   763                           	
   764  007E70                     l681:		; BSR set to: ?
   765                           
   766                           	line	26
   767                           ;lcd_lib.c: 26: RD1=0;
   768  007E70  9283               	bcf	c:(31769/8),(31769)&7	;volatile
   769                           	line	27
   770                           ;lcd_lib.c: 27: }
   771  007E72                     l679:
   772                           			; BSR set to: ?
   773                           
   774  007E72  0012               	return
   775                           	opt stack 0
   776                           GLOBAL __end_of_cmd
   777  007E74                     	__end_of_cmd:
   778                           	FNSIZE	_cmd,2,1
   779                           ; =============== function _cmd ends ===========
                                 =
   780                           
   781                           	signat	_cmd,4216
   782                           	FNCALL	_main,_lcd_init
   783                           	FNCALL	_main,_keypad
   784                           	FNCALL	_main,_data
   785                           	FNCALL	_lcd_init,_cmd
   786                           	FNROOT	_main
   787                           	global	F7893
   788                                   psect   text5,class=CODE,space=0,reloc=2
   789  000000                     F7893  equ     0
   790                           
   791                           	opt lm
   792                           
   793                           	DABS	1,0,5	;F7893
   794                                   psect   idata,class=CODE,space=0
   795                           	file	"F:\online\ahmed\pic controller\keypad_upd
                                 ate1.c"
   796                           	line	6
   797                           
   798                           ;initializer for F7893
   799  007FFA  61                 	db	low(061h)
   800  007FFB  62                 	db	low(062h)
   801  007FFC  63                 	db	low(063h)
   802  007FFD  64                 	db	low(064h)
   803  007FFE  00                 	db	low(0)
   804                                   psect   const,class=CODE,space=0,reloc=2
   805                           	global	_ADCON1
   806  000000                     _ADCON1	equ	0xFC1
   807                           	global	_LATB
   808  000000                     _LATB	equ	0xF8A
   809                           	global	_LATC
   810  000000                     _LATC	equ	0xF8B
   811                           	global	_PORTB
   812  000000                     _PORTB	equ	0xF81
   813                           	global	_TRISB
   814  000000                     _TRISB	equ	0xF93
   815                           	global	_TRISC
   816  000000                     _TRISC	equ	0xF94
   817                           	global	_TRISD
   818  000000                     _TRISD	equ	0xF95
   819                           	global	_RC0
   820  000000                     _RC0	equ	0x7C10
   821                           	global	_RC1
   822  000000                     _RC1	equ	0x7C11
   823                           	global	_RD0
   824  000000                     _RD0	equ	0x7C18
   825                           	global	_RD1
   826  000000                     _RD1	equ	0x7C19
   827                           	psect	intsave_regs,class=BIGRAM,space=1
   828                           	PSECT	param1,class=BANK1,space=1
   829                           	GLOBAL	__Lparam1
   830                           	FNCONF	param1,??,?
   831                           	GLOBAL	__Ldata0
   832  000000                     __Ldata0	EQU	0
   833                           	GLOBAL	__Hdata0
   834  000000                     __Hdata0	EQU	5
   835                           GLOBAL	__Lparam, __Hparam
   836                           GLOBAL	__Lparam1, __Hparam1
   837  000000                     __Lparam	EQU	__Lparam1
   838  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Wed Nov 17 08:43:46 2021

               u70 7DFA                 u71 7DF8                 u80 7E1C  
               u81 7E1A                 u90 7E4E                 u91 7E4C  
              l680 7E50                l681 7E70                l674 7E1E  
              l675 7DFC                l676 7E1C                l678 7DCA  
              l679 7E72                _RC0 007C10                _RC1 007C11  
              _RD0 007C18                _RD1 007C19                u100 7E70  
              u101 7E6E                u151 7E7E                u160 7EC8  
              u161 7EC6                _cmd 7E20                wreg 000FE8  
             F7893 000000               l2060 7F18               l2061 7EE4  
             l2070 7F26               l2062 7ED4               l2071 7F2A  
             l2063 7ED8               l2080 7FB2               l2072 7FAC  
             l2064 7EDC               l2056 7FF8               l2057 7FF6  
             l2081 7FB6               l2073 7F78               l2065 7EE0  
             l2082 7FBA               l2074 7F68               l2066 7F62  
             l2058 7ECE               ?_cmd 0108               l2083 7FBE  
             l2075 7F6C               l2067 7F2E               l2076 7F70  
             l2068 7F1E               l1380 7EBA               l2077 7F74  
             l2069 7F22               l1382 7EC8               l2079 7FC2  
             l1377 7EC8               l1378 7EA6               _LATB 000F8A  
             _LATC 000F8B               _data 7DCC               cmd@a 0108  
             cmd@i 0109               _main 7E74               start 0000  
            ??_cmd 0109              l30040 7FD6              l30033 7F0E  
            l30034 7EF8              l30035 7F58              l30036 7F42  
            l30037 7FA2              l30038 7F8C              l30039 7FEC  
            ?_data 0107              ?_main 0100              _PORTB 000F81  
            _TRISB 000F93              _TRISC 000F94              _TRISD 000F95  
            data@a 0107              data@i 0108              main@t 0105  
            status 000FD8       __end_of_data 7E20       __end_of_main 7ECE  
           ??_data 0108             ??_main 0100      __activetblptr 000000  
           _ADCON1 000FC1             __Ldata 000000   __end_of_lcd_init 7DCC  
           _keypad 7ECE       __mediumconst 0600         __accesstop 0060  
          ?_keypad 0107          ?_lcd_init 0107            __Hdata0 000005  
          __Ldata0 000000            __Hparam 010B            __Lparam 0100  
          __ramtop 0600         ??_lcd_init 0107      __Lmediumconst 0600  
          postinc0 000FEE            postinc1 000FE6     __end_of_keypad 7FFA  
      __end_of_cmd 7E74           ??_keypad 0107        __smallconst 0600  
         __Hparam1 010B           __Lparam1 0100       __Lsmallconst 0600  
         _lcd_init 7D8E           main@pass 0100  
